import{_ as t,o as l,c as a,a as e,b as n}from"./app-5412e4fd.js";const s={},c=e("h1",{id:"架构",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#架构","aria-hidden":"true"},"#"),n(" 架构")],-1),i=e("p",null,[e("img",{src:"https://fast.itbaima.net/2023/03/08/j5kIgD9ZRQiGtd6.jpg",alt:"image-20220416103043845"})],-1),o=e("ul",null,[e("li",null,"生产者（Publisher）和消费者（Consumer）：不用多说了吧。"),e("li",null,"Channel：我们的客户端连接都会使用一个Channel，再通过Channel去访问到RabbitMQ服务器，注意通信协议不是http，而是amqp协议。"),e("li",null,"Exchange：类似于交换机一样的存在，会根据我们的请求，转发给相应的消息队列，每个队列都可以绑定到Exchange上，这样Exchange就可以将数据转发给队列了，可以存在很多个，不同的Exchange类型可以用于实现不同消息的模式。"),e("li",null,"Queue：消息队列本体，生产者所有的消息都存放在消息队列中，等待消费者取出。"),e("li",null,"Virtual Host：有点类似于环境隔离，不同环境都可以单独配置一个Virtual Host，每个Virtual Host可以包含很多个Exchange和Queue，每个Virtual Host相互之间不影响。")],-1),r=e("p",null,"生产者只需要将数据丢进消息队列，而消费者只需要将数据从消息队列中取出，这样就实现了生产者和消费者的消息交互。",-1),u=[c,i,o,r];function h(_,d){return l(),a("div",null,u)}const p=t(s,[["render",h],["__file","c.html.vue"]]);export{p as default};
